import Head from "next/head";
import { Options } from "youtube-player/dist/types";
import styles from "@/styles/home.module.css";
import { ReactNode, useEffect, useState } from "react";
import { youtube_v3 } from "@googleapis/youtube";
import Link from "next/link";
import SearchForm from "@/components/ui/SearchFrom";

export default function Home() {
  const opts: Options = {
    playerVars: {
      rel: 0,
    },
  };

  const [data, setData] = useState<youtube_v3.Schema$SearchResult[]>([]);
  const [pageInfo, setPageInfo] = useState<youtube_v3.Schema$PageInfo | null>(
    null
  );
  const [nextPageToken, setNextPageToken] = useState<string>("");

  const [searchText, setSearchText] = useState<string>("Aimer");

  const search = async (text: string) => {
    const params = new URLSearchParams();
    params.append("q", searchText);

    const data = await fetch(`/api/youtube/search?${params.toString()}`);
    const json = (await data.json()) as youtube_v3.Schema$SearchListResponse;
    const list = json.items!;
    const pageInfo = json.pageInfo!;
    const nextPageToken = json.nextPageToken!;
    setPageInfo(pageInfo);
    setData(list);
    setNextPageToken(nextPageToken);
  };

  const searchHandler = (text: string) => {
    setSearchText(text);
    search(text);
  };

  useEffect(() => {
    search(searchText);
  }, []);

  return (
    <>
      <Head>
        <title>Youtube API Sample</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>Youtube</h1>
        <SearchForm text={searchText} onChange={searchHandler}></SearchForm>
        {data.length > 0 && (
          <div>
            <h2>{searchText}の検索結果</h2>
            <p>
              {pageInfo!.resultsPerPage} / {pageInfo!.totalResults}
            </p>
            <div>
              {data.map((item) => (
                <Link
                  key={String(item.id!.videoId!)}
                  href={`/video/${item.id!.videoId!}`}
                >
                  <div key={String(item.id!.videoId!)} className={styles.row}>
                    {/* eslint-disable @next/next/no-img-element */}
                    <img
                      className={styles.thumbnail}
                      src={item.snippet?.thumbnails?.high?.url!}
                      alt={item.snippet?.title!}
                    />
                    {/* eslint-enable @next/next/no-img-element */}
                    <div className={styles.contents}>
                      <p
                        dangerouslySetInnerHTML={{
                          __html: item.snippet?.title!,
                        }}
                      />
                    </div>
                  </div>
                </Link>
              ))}
            </div>
            <button>Next Page</button>
          </div>
        )}
      </main>
    </>
  );
}
